var e=(e,t)=>{if(void 0!==t.type){const r=Array.isArray(e)?"array":typeof e;if(!t.type.includes(r))return{error:!0,type:"type"}}return void 0===t.value||t.value.includes(parameters)?{error:!1}:{error:!0,type:"value"}},t=(t,r)=>{Object.keys(r).forEach((a=>{if(void 0===t[a])throw new Error(`Cannot Found Condition For "${a}"`);const n=e(r[a],t[a]);if(n.error){if("type"===n.type)throw new Error(`Parameter "${a}" Must Be ${t[a].type.length>1?t[a].type.map((e=>`<${e}>`)).join(" Or "):`A <${t[a].type[0]}>`}`);if("value"===n.type)throw new Error(`Parameter "${a}" Must Be ${t[a].value.join(" Or ")}`)}}))},r=(t,r,a)=>{Object.keys(r).forEach((n=>{const s=e(a[n],r[n]);if(s.error){if("type"===s.type)throw new Error(`Value "${n}" In "${t}" Must Be ${r[n].type.length>1?r[n].type.map((e=>`<${e}>`)).join(" Or "):`A <${r[n].type[0]}>`}`);if("value"===s.type)throw new Error(`Value "${n}" In "${t}" Must Be ${r[n].value.join(" Or ")}`)}}))},a=(e,t)=>{let r=n(e);for(;t.includes(r);)r=n(e);return r};function n(e){let t="";for(let n=0;n<e;n++)t+=s[(r=0,a=s.length-1,Math.floor(Math.random()*a)+r)];var r,a;return t}var s="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890",o=(e,t)=>{let r=0;for(;t.includes(r.toString().padStart(e,"0"));)if(r++,r>+"9".repeat(e))throw new Error("Run Out Of Address");return r.toString().padStart(e,"0")},i=class{#e;#t={};constructor(e){this.#e=e}get workspaces(){return this.#t}addWorkspace(e,t){const r=o(5,Object.keys(this.#t));return this.#t[r]={location:t,memoryAddress:this.#e.MemoryManager.registerChunk(),operations:e.operations,currentOperation:0},this.#e.ChunkManager.createChunk("chunk",r,{type:"workspace",id:r,currentOperation:0},[{name:"Input",data:{type:"list",value:[]},lock:!0},{name:"Result",data:{type:"empty",value:"Empty"},lock:!0},{name:"Local",data:{type:"empty",value:"Empty"},lock:!1}],e.operations[0].source,!1),r}getWorkspace(e){return this.#t[e]}continueWorkspace(e){if(this.#t[e].currentOperation++,this.#t[e].currentOperation<this.#t[e].operations.length){const t=this.#t[e].currentOperation;this.#e.ChunkManager.createChunk("chunk",e,{type:"workspace",id:e,currentOperation:t},[{name:"Input",data:{type:"list",value:[]},lock:!0},{name:"Result",data:{type:"empty",value:"Empty"},lock:!0},{name:"Local",data:{type:"empty",value:"Empty"},lock:!1}],this.#t[e].operations[t].source,!1)}}},l=class{#e;#r={};#a=0;constructor(e){this.#e=e}get size(){return this.#a}registerChunk(){const e=o(this.#e.options.addressLength,Object.keys(this.#r));return this.#r[e]={},e}deleteChunk(e){Object.keys(this.#r[e]).forEach((t=>this.#a-=u(this.#r[e][t].data))),delete this.#r[e]}getAllChunks(){return this.#r}create(e,t,r,a){return void 0!==this.#r[e][t]?{error:!0,content:"Already Exist"}:(this.#r[e][t]={lock:a,data:r},{error:!1})}delete(e,t){this.#a-=u(this.#r[e][t].data),delete this.#r[e][t]}write(e,t,r,a){return void 0===this.#r[e][t]?{error:!0,content:"Not Found"}:this.#r[e][t].lock&&!0!==a?{error:!0,content:"Locked"}:(this.#a-=u(this.#r[e][t].data),this.#r[e][t].data=r,this.#a+=u(r),{error:!1})}read(e,t){return void 0===this.#r[e][t]?void 0:this.#r[e][t].data}getBox(e,t,r,a){let n,s;if(n=e.MemoryManager.read(t.workspaceMemoryAddress,r),s=t.workspaceMemoryAddress,void 0===n&&(n=e.MemoryManager.read(t.chunkMemoryAddress,r),s=t.chunkMemoryAddress),void 0===n)return{error:!0,content:`Box Not Found: "${r}"`};if(a.length>0)for(let e of a){if("list"!==n.type)return void 0===n?{error:!0,content:`Cannot Read ${e} from <none>`}:{error:!0,content:`Cannot Read ${e} from <${n.type}>`};n=n.value[e]}return{error:!1,data:{type:n.type,value:n.value,address:{chunkID:s,name:r,path:[]}}}}};function u(e){return"boolean"===e.type?4:"number"===e.type||"link"===e.type?8:"string"===e.type?2*e.value.length:"empty"===e.type?1:"list"===e.type?e.value.length<1?0:e.value.length>1?e.value.map((e=>u(e))).reduce(((e,t)=>e+t)):u(e.value[0]):void 0}function d(e,t){return{error:!0,content:e,callPath:t,addCallPath(e){return this.callPath.push(e),this}}}function c(e,t,r){if(t.returnedData.length<1)return e.ChunkManager.createChildChunks(e,t,r.keys.map((e=>[e]))),!0;{let a,n=e.MemoryManager.read(t.chunkMemoryAddress,"Result");if("number"===t.returnedData[0].type)if(t.returnedData.length>1){if("number"!==t.returnedData[1].type)return{error:!0,content:`Cannot Perform "Read" Operation Using <${t.returnedData[1].type}>`,line:r.line,start:r.start};a=[[+t.returnedData[0].value,+t.returnedData[1].value]]}else a=[+t.returnedData[0].value];else{if("list"!==t.returnedData[0].type)return d(`Cannot Perform "Read" Operation Using <${t.returnedData[0].type}>`,t.callPath).addCallPath({line:r.line,start:r.start});a=[];for(let e=0;e<t.returnedData[0].value.length;e++){if("number"!==t.returnedData[0].value[e].type)return d(`Cannot Perform "Read" Operation Using [${t.returnedData[0].value.map((e=>`<${e.type}>`)).join(", ")}] (Item ${e} Is A <${t.returnedData[0].value[e].type}>, Expecting A <number>)`,t.callPath).addCallPath({line:r.line,start:r.start});a.push(+t.returnedData[0].value[e].value)}}if(n=function(e,t){for(let r of t){if(void 0===e)return{error:!0,content:'Cannot Perform "Read" Operation On <none>'};if("string"!==e.type&&"list"!==e.type)return{error:!0,content:`Cannot Perform "Read" Operation On <${e.type}>`};if(Array.isArray(r)){if("string"===e.type)e.value=e.value.substring(r[0],r[1]+1);else if(r[1]>r[0]){const t=[],a=Math.min(r[0],r[1]),n=Math.max(r[0],r[1]);for(let r=a;r<=n;r++)void 0!==e.value[r]&&t.push(e.value[r]);e.value=t}e.address=void 0}else"string"===e.type?e={type:"string",value:e.value[r]}:(void 0!==e.address&&e.address.path.push(r),void 0===e.value[r]?e={type:"empty",value:"Empty"}:(e.type=e.value[r].type,e.value=e.value[r].value))}return{error:!1,data:e}}(n,a),n.error)return d(n.content,t.callPath).addCallPath({lbracket:r.lbracket,line:r.line,start:r.start});e.MemoryManager.write(t.chunkMemoryAddress,"Result",n.data,!0),t.returnedData=[]}}function p(e,t,r,a){let n,s;if(n=e.MemoryManager.read(t.workspaceMemoryAddress,r),s=t.workspaceMemoryAddress,void 0===n&&(n=e.MemoryManager.read(t.chunkMemoryAddress,r),s=t.chunkMemoryAddress),void 0===n)return{error:!0,content:`Box Not Found: "${r}"`};if(a.length>0)for(let e of a){if("list"!==n.type)return void 0===n?{error:!0,content:`Cannot Read ${e} from <none>`}:{error:!0,content:`Cannot Read ${e} from <${n.type}>`};n=n.value[e]}return"link"===n.type?p(e,t,n.value.name,n.value.path):{error:!1,data:{type:n.type,value:n.value,address:{chunkID:s,name:r,path:a}}}}function h(e,t,r){const a=p(e,t,r.name,[]);if(a.error)return d(a.content,t.callPath).addCallPath({line:r.line,start:r.start});e.MemoryManager.write(t.chunkMemoryAddress,"Result",a.data,!0)}function y(e,t,r){if(t.path.length>0){let a=e.MemoryManager.read(t.chunkID,t.name);for(let e=0;e<t.path.length-1;e++)a=a.value[t.path[e]];"fire"===r.type?a.value.splice(t.path[t.path.length-1],1):a.value[t.path[t.path.length-1]]=r;const n=e.MemoryManager.write(t.chunkID,t.name,a);if(n.error){if("Not Found"===n.content)return{error:!0,content:`Box Not Found: "${t.name}"`};if("Locked"===n.content)return{error:!0,content:`Box Named "${a.address.name}" Is Locked (Cannot Assign Value To A Locked Box)`}}return{error:!1}}if("fire"===r.type)return e.MemoryManager.delete(t.chunkID,t.name),{error:!1};{const a=e.MemoryManager.write(t.chunkID,t.name,r);if(a.error){if("Not Found"===a.content)return{error:!0,content:`Box Not Found: "${t.name}"`};if("Locked"===a.content)return{error:!0,content:`Box Named "${target.address.name}" Is Locked (Cannot Assign Value To A Locked Box)`}}return{error:!1}}}var v=(e,t,r)=>{let a=!1;const n=r[t.actionData.currentIndex];if("data"===n.type){const r=((e,t,r)=>{if("link"===r.data.type){if(t.returnedData.length<1)return e.ChunkManager.createChildChunks(e,t,[r.data.value]),!0;if(void 0===t.returnedData[0].address)return{error:!0,content:`Cannot Link <${t.returnedData[0].type}> (Target Is Not In A Box)`};e.MemoryManager.write(t.chunkMemoryAddress,"Result",{type:"link",value:t.returnedData[0].address},!0),t.returnedData=[]}else if("list"===r.data.type||"inputList"===r.data.type)if(t.returnedData.length<1){if(r.data.value.length>0)return e.ChunkManager.createChildChunks(e,t,r.data.value.map((e=>[e]))),!0;e.MemoryManager.write(t.chunkMemoryAddress,"Result",{type:r.data.type,value:[]},!0)}else e.MemoryManager.write(t.chunkMemoryAddress,"Result",{type:r.data.type,value:t.returnedData},!0),t.returnedData=[];else e.MemoryManager.write(t.chunkMemoryAddress,"Result",r.data,!0)})(e,t,n);if("object"==typeof r)return r;a=!0===r}else if("method"===n.type)t.actionData.methods.push(n.name);else if("get"===n.type){const r=h(e,t,n);if("object"==typeof r)return r}else if("set"===n.type){const r=function(e,t,r){if(t.returnedData.length<1)return e.ChunkManager.createChildChunks(e,t,[[r.target],[r.source]]),!0;{const[a,n]=t.returnedData;if(void 0===a.address)return{error:!0,content:"Cannot Assign Value To The Target (Target Is Not In A Box)",line:r.line,start:r.start};const s=y(e,a.address,n);if(s.error)return d(s.content,t.callPath).addCallPath({line:r.line,start:r.start});t.returnedData=[],e.MemoryManager.write(t.chunkMemoryAddress,"Result",n,!0)}}(e,t,n);if("object"==typeof r)return r;a=!0===r}else if("read"===n.type){const r=c(e,t,n);if("object"==typeof r)return r;a=!0===r}else if("call"===n.type){const r=((e,t,r)=>{const a=e.MemoryManager.read(t.chunkMemoryAddress,"Result");if("actionList"!==a.type)return d(`Cannot Perform "Call" Operation On <${a.type}>`,t.callPath).addCallPath({line:r.line,start:r.start});if(void 0===t.actionData.calling){if(t.returnedData.length<1&&r.keys.length>0)return e.ChunkManager.createChildChunks(e,t,r.keys.map((e=>[e]))),!0;if(e.ChunkManager.createChunk("chunk",t.workspaceID,{type:"chunk",id:t.id,returnIndex:0},[{name:"Input",data:{type:"list",value:t.returnedData},lock:!0},{name:"Result",data:{type:"empty",value:"Empty"},lock:!0},{name:"Local",data:{type:"empty",value:"Empty"},lock:!1}],a.value,t.actionData.methods.includes("async"),{line:r.line,start:r.start}),!t.actionData.methods.includes("async"))return t.actionData.calling=!0,t.returnedData=[void 0],!0;e.MemoryManager.write(t.chunkMemoryAddress,"Result",{type:"empty",value:"Empty"},!0),t.returnedData=[]}else e.MemoryManager.write(t.chunkMemoryAddress,"Result",t.returnedData[0],!0),t.actionData.calling=void 0,t.returnedData=[]})(e,t,n);if("object"==typeof r)return r;a=!0===r}else if("math"===n.type){const r=((e,t,r)=>{if(t.returnedData.length<1)return e.ChunkManager.createChildChunks(e,t,r.data.map((e=>[e]))),!0;{let a;if("add"===r.operation)if("number"===t.returnedData[0].type&&"number"===t.returnedData[1].type)a={type:"number",value:""+(+t.returnedData[0].value+ +t.returnedData[1].value)};else{if("string"!==t.returnedData[0].type||"string"!==t.returnedData[1].type)return d(`Cannot Perform "Add" Operation On <${t.returnedData[0].type}> Using <${t.returnedData[1].type}>`,t.callPath).addCallPath({line:r.line,start:r.start});a={type:"string",value:t.returnedData[0].value+t.returnedData[1].value}}else if("subtract"===r.operation){if("number"!==t.returnedData[0].type||"number"!==t.returnedData[1].type)return d(`Cannot Perform "Subtract" Operation On <${t.returnedData[0].type}> Using <${t.returnedData[1].type}>`,t.callPath).addCallPath({line:r.line,start:r.start});a={type:"number",value:""+(+t.returnedData[0].value-+t.returnedData[1].value)}}else if("multiply"===r.operation)if("number"===t.returnedData[0].type&&"number"===t.returnedData[1].type)a={type:"number",value:""+ +t.returnedData[0].value*+t.returnedData[1].value};else{if("string"!==t.returnedData[0].type||"number"!==t.returnedData[1].type)return d(`Cannot Perform "Multiply" Operation On <${t.returnedData[0].type}> Using <${t.returnedData[1].type}>`,t.callPath).addCallPath({line:r.line,start:r.start});a=+t.returnedData[1].value>0?{type:"string",value:t.returnedData[0].value.repeat(+t.returnedData[1].value)}:{type:"string",value:""}}else if("divide"===r.operation){if("number"!==t.returnedData[0].type||"number"!==t.returnedData[1].type)return d(`Cannot Perform "Divide" Operation On <${t.returnedData[0].type}> Using <${t.returnedData[1].type}>`,t.callPath).addCallPath({line:r.line,start:r.start});a="0"===t.returnedData[1].value?{type:"empty",value:"Empty"}:{type:"number",value:""+ +t.returnedData[0].value/+t.returnedData[1].value}}else if("equal"===r.operation)a={type:"boolean",value:t.returnedData[0].type===t.returnedData[1].type&&t.returnedData[0].value===t.returnedData[1].value?"Yes":"No"};else if(["greater","greaterEqual","less","lessEqual"].includes(r.operation)){if("number"!==t.returnedData[0].type||"number"!==t.returnedData[1].type)return d(`Cannot Perform "${["Is Greater","Is Greater Or Equal","Is Less","Is Less Or Equal"][["greater","greaterEqual","less","lessEqual"].indexOf(r.operation)]}" Operation On <${t.returnedData[0].type}> Using <${t.returnedData[1].type}>`,t.callPath).addCallPath({line:r.line,start:r.start});"greater"===r.operation?a={type:"boolean",value:+t.returnedData[0].value>+t.returnedData[1].value?"Yes":"No"}:"greaterEqual"===r.operation?a={type:"boolean",value:+t.returnedData[0].value>=+t.returnedData[1].value?"Yes":"No"}:"less"===r.operation?a={type:"boolean",value:+t.returnedData[0].value<+t.returnedData[1].value?"Yes":"No"}:"lessEqual"===r.operation&&(a={type:"boolean",value:+t.returnedData[0].value<=+t.returnedData[1].value?"Yes":"No"})}else if("and"===r.operation||"or"===r.operation){if("boolean"!==t.returnedData[0].type||"boolean"!==t.returnedData[1].type)return d(`Cannot Perform "${["And","Or"][["and","or"].indexOf(r.operation)]}" Operation On <${t.returnedData[0].type}> Using <${t.returnedData[1].type}>`,t.callPath).addCallPath({line:r.line,start:r.start});"and"===r.operation?a={type:"boolean",value:"Yes"===t.returnedData[0].value&&"Yes"===t.returnedData[1].value?"Yes":"No"}:"or"===r.operation&&(a={type:"boolean",value:"Yes"===t.returnedData[0].value||"Yes"===t.returnedData[1].value?"Yes":"No"})}else if("not"===r.operation){if("boolean"!==t.returnedData[0].type)return d(`Cannot Perform "Not" Operation On <${t.returnedData[0].type}>`,t.callPath).addCallPath({line:r.line,start:r.start});a={type:"boolean",value:"Yes"===t.returnedData[0].value?"No":"Yes"}}e.MemoryManager.write(t.chunkMemoryAddress,"Result",a,!0)}})(e,t,n);if("object"==typeof r)return r;a=!0===r}else if("ifElse"===n.type){const r=((e,t,r)=>{if(void 0===t.actionData.calling){if(t.returnedData.length<1)return r.condition.length>0?e.ChunkManager.createChildChunks(e,t,[r.condition]):t.returnedData=[{type:"boolean",value:"False"}],!0;if("boolean"!==t.returnedData[0].type)return d(`Cannot Perform "If" Operation Using <${t.returnedData[0].type}>`,t.callPath).addCallPath({line:r.line,start:r.start});if("Yes"===t.returnedData[0].value)return e.ChunkManager.createChildChunks(e,t,[r.ifActionList]),t.actionData.calling=!0,!0;if(r.elseActionList.length>0)return e.ChunkManager.createChildChunks(e,t,[r.elseActionList]),t.actionData.calling=!0,!0}else e.MemoryManager.write(t.chunkMemoryAddress,"Result",t.returnedData[0],!0),t.actionData.calling=void 0,t.returnedData=[]})(e,t,n);if("object"==typeof r)return r;a=!0===r}else if("loop"===n.type){const r=((e,t,r)=>{if(void 0!==t.actionData.calling)return e.MemoryManager.write(t.chunkMemoryAddress,"Result",t.returnedData[0],!0),t.returnedData=[],t.actionData.calling=void 0,!0;if(t.returnedData.length<1&&!0!==t.actionData.static)return e.ChunkManager.createChildChunks(e,t,r.condition.map((e=>[e]))),!0;{let a=!1;if(!0===t.actionData.static&&(t.returnedData=t.actionData.staticData),"boolean"===t.returnedData[0].type)"Yes"===t.returnedData[0].value&&(t.actionData.count=0,a=!0);else{if("number"!==t.returnedData[0].type)return d(`Cannot Perform "Loop" Operation On <${t.returnedData[0].type}>`,t.callPath).addCallPath({line:r.line,start:r.start});void 0===t.actionData.count&&(t.actionData.count=0),t.actionData.count<+t.returnedData[0].value&&(t.actionData.count++,a=!0)}if(a){if(void 0!==t.returnedData[1]){if(void 0===t.returnedData[1].address)return{error:!0,content:"Cannot Assign Value To The Target (Target Is Not In A Box)",line:r.line,start:r.start};const a=y(e,t.returnedData[1].address,{type:"number",value:`${t.actionData.count}`});if(a.error)return"Locked"===a.content?d(`Box Named "${target.address.name}" Is Locked (Cannot Assign Value To A Locked Box)`,t.callPath).addCallPath({line:r.line,start:r.start}):a}return void 0===t.actionData.static&&void 0===t.returnedData[0].address&&(t.actionData.static=!0,t.actionData.staticData=t.returnedData),e.ChunkManager.createChildChunks(e,t,[r.actionList]),t.actionData.calling=!0,!0}t.returnedData=[],t.actionData.static=void 0,t.actionData.count=void 0,t.actionData.calling=void 0}})(e,t,n);if("object"==typeof r)return r;a=!0===r}return a||(t.actionData.currentIndex<r.length-1?t.actionData.currentIndex++:(t.currentAction++,t.actionData.currentIndex=0,t.actionData.methods=[])),{error:!1,data:e.MemoryManager.read(t.chunkMemoryAddress,"Result")}},f=class{#e;#r={};constructor(e){this.#e=e}get totalChunks(){return Object.keys(this.#r).length}createChunk(e,t,r,a,n,s,i){const l=o(this.#e.options.addressLength,Object.keys(this.#r));let u=[];if("chunk"===r.type){const e=this.getChunk(r.id);u=void 0===i?e.callPath:e.callPath.concat([i]),u.length>10&&u.splice(0,1),s||(e.state="waiting")}return this.#e.TaskManager.addTask(l),this.#r[l]={id:l,type:e,state:"running",async:s,workspaceID:t,parent:r,workspaceMemoryAddress:this.#e.WorkspaceManager.getWorkspace(t).memoryAddress,chunkMemoryAddress:this.#e.MemoryManager.registerChunk(),actions:n,currentAction:0,actionData:{currentIndex:0,methods:[]},returnedData:[],callPath:u},a.forEach((e=>this.#e.MemoryManager.create(this.#r[l].chunkMemoryAddress,e.name,e.data,e.lock))),l}createChildChunks(e,t,r){t.returnedData=r.map((()=>{})),r.forEach(((r,a)=>{this.createChunk("childChunk",t.workspaceID,{type:"chunk",id:t.id,returnIndex:a},[{name:"Input",data:e.MemoryManager.read(t.chunkMemoryAddress,"Input"),lock:!0},{name:"Result",data:e.MemoryManager.read(t.chunkMemoryAddress,"Result"),lock:!0},{name:"Local",data:{type:"link",address:{chunkID:t.chunkMemoryAddress,name:"Local",path:[]}},lock:!1}],r,!1)}))}deleteChunk(e){const t=this.getChunk(e);if(!t.async)if("workspace"===t.parent.type){const e=this.#e.WorkspaceManager.getWorkspace(t.workspaceID),r=e.operations[e.currentOperation].target,a=this.#e.MemoryManager.read(t.chunkMemoryAddress,"Result");if(r.flags.includes("createLocal")&&r.flags.includes("createLocal")){if(this.#e.MemoryManager.create(e.memoryAddress,r.name,a,r.flags.includes("lock")).error)return{error:!0,content:`Box Named "${r.name}" Already Exist`}}else{const t=this.#e.MemoryManager.write(e.memoryAddress,r.name,a);if(t.error){if("Not Found"===t.content)return{error:!0,content:`Box Named "${r.name}" Not Found`};if("Locked"===t.content)return{error:!0,content:`Box Named "${r.name}" Is Locked (Cannot Assign Value To A Locked Box)`}}}this.#e.WorkspaceManager.continueWorkspace(t.workspaceID)}else if("chunk"===t.parent.type){const e=this.#r[t.parent.id];e.returnedData[t.parent.returnIndex]=this.#e.MemoryManager.read(t.chunkMemoryAddress,"Result"),e.returnedData.filter((e=>void 0===e)).length<1&&(e.state="running")}return this.#e.TaskManager.removeTask(e),this.#e.MemoryManager.deleteChunk(this.#r[e].chunkMemoryAddress),delete this.#r[e],{error:!1}}getChunk(e){return this.#r[e]}executeChunk(e){const t=this.#r[e];return t.currentAction>=t.actions.length?this.deleteChunk(e):v(this.#e,t,t.actions[t.currentAction])}},g=class{#n;#s={};createInterval(e,t){let r=a(5,Object.keys(this.#s));return this.#s[r]={interval:e,times:1/0,callback:t,count:0,lastUpdateTime:performance.now()},void 0===this.#n&&this.#o(),r}deleteTimer(e){void 0!==this.#s[e]&&(delete this.#s[e],Object.keys(this.#s).length<1&&this.#i())}deleteAllTimers(){Object.keys(this.#s).forEach((e=>this.deleteTimer(e)))}#o(){this.#n=setInterval((()=>{const e=performance.now();Object.keys(this.#s).forEach((t=>{const r=this.#s[t];void 0!==r&&e-r.lastUpdateTime>=r.interval&&(r.callback(r.count),r.lastUpdateTime=e,r.times!==1/0&&(r.count++,r.count>=r.times&&(void 0!==r.callback2&&r.callback2(),delete this.#s[t])))}))}),1)}#i(){void 0!==this.#n&&(clearInterval(this.#n),this.#n=void 0)}},m=class{#e;#l=[];#u=0;constructor(e){this.#e=e}get totalTasks(){return this.#l.length}addTask(e){this.#l.push(e)}removeTask(e){this.#l.splice(this.#l.indexOf(e),1)}next(){this.#u>=this.#l.length&&(this.#u=0);let e=this.#l[this.#u];return this.#u++,"running"===this.#e.ChunkManager.getChunk(e).state?e:this.next()}},k=class{#d="idle";#c;#p;#h;#y={};constructor(e){this.#c=e,this.TimerManager=new g,this.TaskManager=new m(this),this.MemoryManager=new l(this),this.ChunkManager=new f(this),this.WorkspaceManager=new i(this)}get state(){return this.#d}get options(){return this.#c}async start(e,t){if("idle"===this.#d)return new Promise((r=>{this.#p=e=>r(e),this.WorkspaceManager.addWorkspace(e,t),this.timer=this.TimerManager.createInterval(this.#c.executionInterval,(()=>{for(let e=0;e<this.#c.chunkPerExecution;e++){if(!(this.TaskManager.totalTasks>0)){this.stop();break}{const e=this.TaskManager.next(),t=this.ChunkManager.executeChunk(e);if(t.error){this.stop();break}void 0!==t.data&&(this.#h=t.data)}}})),this.callEvent("start")}));throw new Error(`Cannot Start The Virtual Machine (State: ${this.#d})`)}stop(){this.TimerManager.deleteTimer(this.timer),this.#p({error:!1,data:this.#h}),this.callEvent("stop")}listen(e,t){const r=a(5,Object.keys(this.#y));return void 0===this.#y[e]&&(this.#y[e]={}),this.#y[e][r]=t,{stop:()=>{if(void 0===this.#y[e][r])throw new Error(`Listener Not Found (${r})`);delete this.#y[e][r]}}}callEvent(e,t){void 0!==this.#y[e]&&Object.keys(this.#y[e]).forEach((r=>this.#y[e][r](t)))}},D=class{#e;constructor(e){t({options:{type:["undefined","object"]}},{options:e}),e=Object.assign({chunkPerExecution:100,executionInterval:0,maxMemory:1/0,maxChunks:1/0,addressLength:5},void 0===e?{}:e),r("options",{chunkPerExecution:{type:["number"]},executionInterval:{type:["number"]},maxMemory:{type:["number"]},maxChunks:{type:["number"]},addressLength:{type:["number"]}},e),this.#e=new k(e)}get state(){return this.#e.state}get options(){return this.#e.options}async start(e,a){return t({executable:{type:["object"]},location:{type:["string"]}},{executable:e}),r("executable",{operations:{type:["array"]},imports:{type:["array"]}},e),await this.#e.start(e,a)}stop(){this.#e.stop()}listen(e,r){t({name:{type:["string"],value:["start","stop"]},callback:{type:["function"]}},{name:e,callback:r})}},C=(e,t)=>{let r=[[]];return e.forEach((e=>{t(e)?r.push([]):r[r.length-1].push(e)})),r},M=async(e,t,r)=>new Promise((a=>{let n=0;!async function s(){n+=await r(n),n>=e?a():t>0?setTimeout(s,t):s()}()})),b=(e,t)=>void 0!==e&&(!(void 0!==t.type&&!t.type.includes(e.type))&&(!(void 0!==t.value&&!t.value.includes(e.value))&&(void 0===t.layer||e.layer===t.layer))),x=function e(t){let r=[];if(t.length>1)if(t.filter((e=>"operator"===e.type&&"="===e.value)).length>0){for(let[e,r]of t.filter((e=>"operator"===e.type&&"="===e.value)).entries())if(e>0)return{error:!0,content:'Unexpected "=" <operator>',line:r.line,start:r.start};const a=t.filter((e=>"operator"===e.type&&"="===e.value))[0],n=C(t,(e=>"operator"===e.type&&"="===e.value));for(let[t,r]of n.entries()){if(r.length<1)return{error:!0,content:`Expecting <any> (${t>0?"After":"Before"} The <operator> "=")`,line:a.line,start:a.start};const s=e(r);if(s.error)return s;n[t]=s.data}r=[{type:"set",target:n[0],source:n[1],line:a.line,start:a.start}]}else if(t.filter((e=>"operator"===e.type&&w.includes(e.value))).length>0){let a;for(let[e,r]of t.filter((e=>"operator"===e.type&&w.includes(e.value))).entries()){if(e>0)return{error:!0,content:`Unexpected "${r.value}" <operator> (There Should Only Be One <operator> In The Expression)`,line:r.line,start:r.start};a=r}let n=C(t,(e=>"operator"===e.type&&w.includes(e.value)));for(let[t,r]of n.entries()){if(r.length<1)return{error:!0,content:`Expecting <any> (${t>0?"After":"Before"} The <operator> "${a.value}")`,line:a.line,start:a.start};const s=e(r);if(s.error)return s;n[t]=s.data}r=[{type:"math",operation:["add","subtract","multiply","divide","equal","notEqual","greater","greaterEqual","less","lessEqual","and","or"][w.indexOf(a.value)],data:[n[0],n[1]],line:a.line,start:a.start}]}else if(t.filter((e=>"operator"===e.type&&"!"===e.value)).length>0){for(let[e,r]of t.filter((e=>"operator"===e.type&&"!"===e.value)).entries())if(e>0)return{error:!0,content:'Unexpected "!" <operator>',line:r.line,start:r.start};for(let[e,r]of t.entries())if("operator"===r.type&&"!"===r.value&&e>0)return{error:!0,content:'Unexpected "!" <operator> (Should Only Appear At The Start Of The Instruction)',line:r.line,start:r.start};const a=e(t.slice(1,t.length));if(a.error)return a;r=[{type:"math",operation:"not",data:[a.data],line:t[0].line,start:t[0].start}]}else if("list"===t[t.length-1].type||"inputList"===t[t.length-1].type){const a=e(t.splice(0,t.length-1));if(a.error)return a;r=r.concat(a.data);const n=t[t.length-1],s=e([n]);if(s.error)return s;r.push({type:"list"===n.type?"read":"call",keys:s.data[0].data.value,line:n.line,start:n.start})}else if("inputList"===t[0].type&&b(t[1],{type:["operator"],value:["?",":"]})){const a=e([t[0]]);if(a.error)return a;if(void 0===t[2])return{error:!0,content:"Expecting <actionList>",line:t[1].line,start:t[1].end};if("?"===t[1].value){const n=e([t[2]]);if(n.error)return n;let s=n.data[0].data.value,o=[];if(void 0!==t[3]){if("operator"!==t[3].type||":"!==t[3].value)return{error:!0,content:`Unexpected "${t[3].value}" <${t[3].type}>`,line:t[3].line,start:t[3].start};if(void 0===t[4]||"actionList"!==t[4].type)return{error:!0,content:"Expecting <actionList>",line:t[3].line,start:t[3].end};{if(void 0!==t[5])return{error:!0,content:`Unexpected "${t[5].value}" <${t[5].type}>`,line:t[5].line,start:t[5].start};const r=e([t[4]]);if(r.error)return r;o=r.data[0].data.value}}r.push({type:"ifElse",condition:[a.data[0].data.value[0]],ifActionList:s,elseActionList:o,line:t[0].line,start:t[0].start})}else{if(void 0!==t[3])return{error:!0,content:`Unexpected "${t[3].value}" <${t[3].type}>`,line:t[3].line,start:t[3].start};const n=e([t[2]]);if(n.error)return n;r.push({type:"loop",condition:a.data[0].data.value,actionList:n.data[0].data.value,line:t[0].line,start:t[0].start})}}else if("keyword"===t[0].type&&"async"===t[0].value){r.push({type:"method",name:"async"});const a=e(t.slice(1,t.length));if(a.error)return a;r=r.concat(a.data)}else{if("operator"!==t[0].type||"~"!==t[0].value)return{error:!0,content:`Unexpected "${t[1].value}" <${t[1].type}>`,line:t[1].line,start:t[1].start};{const a=e(t.slice(1,t.length));if(a.error)return a;r=[{type:"data",data:{type:"link",value:[a.data]},line:t[0].line,start:t[0].start}]}}else if(["list","actionList","inputList"].includes(t[0].type)){let a=[];for(let r of t[0].value){const t=e(r);if(t.error)return t;a.push(t.data)}r=[{type:"data",data:{type:t[0].type,value:a},line:t[0].line,start:t[0].start}]}else if("keyword"===t[0].type&&"stop"===t[0].value){if(t.length>1)return{error:!0,content:`Unexpected "${t[1].value}" <${t[1].type}>`,line:t[1].line,start:t[1].start};r=[{type:"stop"}]}else{if("keyword"===t[0].type||"operator"===t[0].type)return{error:!0,content:`Unexpected "${t[0].value}" <${t[0].type}>`,line:t[0].line,start:t[0].start};r="name"===t[0].type?[{type:"get",name:t[0].value,line:t[0].line,start:t[0].start}]:[{type:"data",data:{type:t[0].type,value:t[0].value},line:t[0].line,start:t[0].start}]}return{error:!1,data:r}},w=["+","-","*","/","==","!=",">",">=","<","<=","&&","||"];var A=e=>{const t=C(e,(e=>"operator"===e.type&&"|"===e.value&&0===e.layer)).filter((e=>e.length>0));for(let[e,r]of t.entries()){const a=x(r);if(a.error)return a;t[e]=a.data}return{error:!1,data:t}},$=e=>{let t=0,r=[];return b(e[0],{type:["operator"],value:["+","!"]})&&(r.push("+"===e[0].value?"createLocal":"createGlobal"),b(e[1],{type:["operator"],value:["@"]})?(r.push("lock"),t=2):t=1),b(e[t],{type:["name"]})?{error:!1,data:{name:e[t].value,flags:r}}:void 0===e[t]?{error:!0,content:"Expecting A <name>",line:e[e.length-1].line,start:e[e.length-1].end}:{error:!0,content:`Unexpected "${e[t].value}" <${e[t].type}> (Expecting A <name>)`,line:e[t].line,start:e[t].start}},O=async(e,t)=>{const r=[[]];let a=[];function n(e){r[r.length-1].push(e),s={}}let s={},o=1,i=0;return await M(t.length,e.options.loopInterval,(e=>{if("\n"===t[e])"string"===s.type?s.value+="\n":(void 0!==s.type&&n({type:s.type,value:s.value,line:s.line,start:s.start,end:e-1}),i<1&&r.push([]),o++);else if(" "===t[e])"string"===s.type?s.value+=" ":void 0!==s.type&&n({type:s.type,value:s.value,line:s.line,start:s.start,end:e-1});else if("#"===t[e]){if("string"!==s.type){void 0!==s.type&&n({type:s.type,value:s.value,line:s.line,start:s.start,end:e-1});let r=0;for(;"\n"!==t[e+r]&&void 0!==t[e+r];)r++;return r}s.value+=" "}else if("[{(".includes(t[e]))"string"===s.type?s.value+=t[e]:(void 0!==s.type&&n({type:s.type,value:s.value,line:s.line,start:s.start,end:e-1}),n({type:"bracket",value:t[e],line:o,layer:i,start:e,end:e}),i++);else if("]})".includes(t[e]))"string"===s.type?s.value+=t[e]:(void 0!==s.type&&n({type:s.type,value:s.value,line:s.line,start:s.start,end:e-1}),i--,n({type:"bracket",value:t[e],line:o,layer:i,start:e,end:e}));else if(void 0===s.type){const a=e;if("Yes"===t.substring(e,e+3)||"No"===t.substring(e,e+2)){const r="Yes"===t.substring(e,e+3)?"Yes":"No";return n({type:"boolean",value:r,line:o,start:a,end:e+(r.length-1)}),r.length}if("0123456789".includes(t[e])){let n,i=r[r.length-1];b(i[i.length-1],{type:["operator"],value:["-"]})&&b(i[i.length-2],{type:["operator"],value:L})?(i.splice(i.length-1,1),n=`-${t[e]}`):n=t[e],s={type:"number",value:n,line:o,start:a}}else if("'"===t[e]||'"'===t[e])s={type:"string",closeType:t[e],value:"",line:o,start:a};else{if("Empty"===t.substring(e,e+5))return n({type:"empty",value:"Empty",line:o,start:a,end:e+4}),5;if("Fire"===t.substring(e,e+4))return n({type:"fire",value:"Fire",line:o,start:a,end:e+3}),4;if(e<t.length-1&&I.includes(t.substring(e,e+2)))return n({type:"operator",value:t.substring(e,e+2),line:o,start:a,end:e+1}),2;I.includes(t[e])?",|".includes(t[e])?n({type:"operator",value:t[e],line:o,layer:i,start:a,end:e}):n({type:"operator",value:t[e],line:o,start:a,end:e}):s={type:"name",value:t[e],line:o,start:a}}}else if("number"===s.type){if(!"0123456789.".includes(t[e])){"."===s.value[s.value.length-1]&&a.push({content:'Unexpected "." <operator>',line:s.line,start:s.start+(s.value.length-1)});for(let e=0;e<s.value.length;e++)"."===s.value[e]&&"."===s.value[e+1]&&a.push({content:'Unexpected "." <operator>',line:s.line,start:s.start+e});return n({type:"number",value:s.value,line:s.line,start:s.start,end:e-1}),0}s.value+=t[e]}else if("string"===s.type)t[e]===s.closeType?n({type:"string",value:s.value,line:s.line,start:s.start,end:e-1}):s.value+=t[e];else if("name"===s.type){if("'"===t[e]||'"'===t[e]||I.includes(t[e]))return n({type:"name",value:s.value,line:s.line,start:s.start,end:e--}),0;s.value+=t[e]}return 1})),void 0!==s.type&&("string"===s.type?a.push({content:"<string> Cannot Be Closed",line:s.line,start:s.start}):n({type:s.type,value:s.value,line:s.line,start:s.start,end:t.length-1})),await M(r.length,e.options.loopInterval,(async t=>{if(void 0===r[t])return 1;if(r[t].length>0){const n=r[t].map((e=>b(e,{type:["name"],value:P})?{type:"keyword",value:e.value,line:e.line,start:e.start,end:e.end}:e)),s=await E(e,n);return s.error?a=a.concat(s.errors):r[t]=s.data,1}return r.splice(t,1),0})),{error:a.length>0,errors:a,data:r}};async function E(e,t){const r=[];let a=[],n={};return await M(t.length,e.options.loopInterval,(async s=>{if(void 0===n.type)b(t[s],{type:["bracket"],value:["[","{","("]})?n={type:["list","actionList","inputList"]["[{(".indexOf(t[s].value)],value:[[]],line:t[s].line,layer:t[s].layer,start:t[s].start}:r.push(t[s]);else if(b(t[s],{type:["bracket"],value:["]})"[["list","actionList","inputList"].indexOf(n.type)]],layer:n.layer})){n.value[0].length<1&&(n.value=[]);for(let t=0;t<n.value.length;t++){const r=await E(e,n.value[t]);r.error&&(a=a.concat(r.errors)),n.value[t]=r.data}r.push({type:n.type,value:n.value,line:n.line,start:n.start,end:t[s].end}),n={}}else b(t[s],{type:["operator"],value:["actionList"===n.type?"|":","],layer:n.layer+1})?n.value[n.value.length-1].length>0?n.value.push([]):a.push({content:`Unexpected "${t[s].value}" <operator>`,line:t[s].line,start:t[s].start}):n.value[n.value.length-1].push(t[s]);return 1})),{error:a.length>0,errors:a,data:r}}var I=["@","!","?",":","<-","->","+","-","*","/","=","==",">",">=","<","<=","&&","||",",","|","~"],P=["import","as","async","return"],L=["+","-","*","/","==","!=",">",">=","<","<=","&&","||"],T=class{#c;constructor(e){t({options:{type:["undefined","object"]}},{options:e}),this.#c=Object.assign({loopInterval:0}),r("options",{loopInterval:{type:["number"]}},this.#c)}get options(){return this.#c}async compile(e){t({string:{type:["string"]}},{string:e});let r=await O(this,e);return r.error?{error:!0,errors:r.errors}:(r=await(async(e,t)=>{const r=[];let a=[];const n=[];return await M(t.length,e.options.loopInterval,(e=>{const s=t[e];if(b(s[0],{type:["keyword"],value:["import"]}))b(s[1],{type:["string"]})?b(s[2],{type:["keyword"],value:["as"]})?b(s[3],{type:["name"]})?n.push({source:s[1].value,as:s[3].value}):a.push({content:"Expecting A <name>",line:s[2].line,start:s[2].end}):n.push({source:s[1].value}):a.push({content:"Expecting A <string>",line:s[0].line,start:s[0].end});else{const e=s.filter((e=>"operator"===e.type&&("->"===e.value||"<-"===e.value)));if(e.length<1)a.push({content:"Cannot Find Any Directions",line:s[0].line,start:0});else{e.forEach(((e,t)=>{t>0&&a.push({content:`Unexpected "${e.value}" / <operator> (Too Many Directions)`,line:e.line,start:e.start})}));const t=e[0].value,n=C(s,(e=>"operator"===e.type&&e.value===t));if(n[0].length<1||n[1].length<1)a.push({content:`Expecting <any> (${n[0].length<1?"Before":"After"} The <operator> "${t}")`});else{const[e,s]="->"===t?[$(n[1]),A(n[0])]:[$(n[0]),A(n[1])];e.error&&a.push({content:e.content,line:e.line,start:e.start}),s.error&&a.push({content:s.content,line:s.line,start:s.start}),r.push({target:e.data,source:s.data})}}}return 1})),{error:a.length>0,errors:a,data:{operations:r,imports:n}}})(this,r.data),r.error?{error:!0,errors:r.errors}:{error:!1,data:r.data})}},R={version:"v0.1",buildDate:"2024/2/29",github:"https://github.com/Boxes-Language/Boxes-Engine"};export{T as Compiler,R as Info,D as VirtualMachine};